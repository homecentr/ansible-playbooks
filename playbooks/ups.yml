---
##############################
### Master
##############################
- name: "Network UPS tools - master"
  hosts: ups_masters
  become: true
  become_method: sudo
  tasks:
    - name: "Install Network UPS Tools"
      package:
        name: nut
        state: present

    - name: "Configure Network UPS Tools Driver"
      register: ups_conf
      copy:
        dest: /etc/nut/ups.conf
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          [eaton1]
          driver = usbhid-ups
          port = auto
          vendorid = 0463
          desc = "Eaton 5E 1100i USB"

    - name: "Configure Network UPS Tools Daemon"
      register: upsd_conf
      copy:
        dest: /etc/nut/upsd.conf
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          LISTEN 127.0.0.1
          LISTEN {{ ansible_host }}

          ACL all 0.0.0.0/0
          ACL localhost 127.0.0.1/32
          {% for slave in groups['ups_slaves'] %}
          ACL {{ slave }} {{ hostvars[slave]['ansible_host'] }}
          {% endfor %}
          ACCEPT localhost
          {% for slave in groups['ups_slaves'] %}
          ACCEPT {{ slave }}
          {% endfor %}
          REJECT all

    - name: "Configure Network UPS Tools Daemon users"
      register: upsd_users
      copy:
        dest: /etc/nut/upsd.users
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          maxretry = 5
          retrydelay = 5

          [local_monitor]
          password = {{ secret_ups_slave_password }}
          allowfrom = localhost
          upsmon master
          {% for slave in groups['ups_slaves'] %}

          [{{ slave }}]
          password = {{ secret_ups_slave_password }}
          allowfrom = {{ hostvars[slave]['ansible_host'] }}
          {% endfor %}

    - name: "Configure UPS Tools Monitor"
      register: upsmon_conf
      copy:
        dest: /etc/nut/upsmon.conf
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          MONITOR eaton1@localhost 1 local_monitor {{ secret_ups_slave_password }} master
          POWERDOWNFLAG /etc/killpower
          FINALDELAY 240
          SHUTDOWNCMD "/sbin/shutdown -h now"

    - name: "Configure Network UPS Tools Mode"
      register: nut_conf
      copy:
        dest: /etc/nut/nut.conf
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          MODE=netserver

    - name: "Restart the driver service"
      when: ups_conf.changed
      service:
        name: nut-driver
        state: restarted

    - name: "Restart the monitor service"
      when: upsmon_conf.changed
      service:
        name: nut-monitor
        state: restarted

    - name: "Restart the server service"
      when: ups_conf.changed or upsd_conf.changed or upsd_users.changed
      service:
        name: nut-server
        state: restarted

##############################
### Slave
##############################
- name: "Network UPS tools - slave"
  hosts: ups_slaves
  become: true
  become_method: sudo
  tasks:
    - name: "Install Network UPS Tools Client"
      package:
        name: nut-client
        state: present

    - name: "Configure Network UPS Tools Mode"
      register: nut_conf
      copy:
        dest: /etc/nut/nut.conf
        mode: 0640
        owner: root
        group: nut
        force: yes
        content: |
          MODE=netclient

    - name: "Configure Network UPS Tools Monitor"
      register: upsmon_conf
      copy:
        dest: /etc/nut/upsmon.conf
        force: yes
        mode: 0640
        owner: root
        group: nut
        content: |
          MONITOR {{ ups_name }}@{{ groups['ups_masters'][0] }} 1 {{ inventory_hostname }} {{ secret_ups_slave_password }} slave
          POWERDOWNFLAG /etc/killpower
          FINALDELAY {{ ups_shutdown_delay_seconds }}
          SHUTDOWNCMD "/sbin/shutdown -h now"

      # Note PVE nodes may need a delay so that the VMs have time to shutdown (e.g. 3 minutes)

    - name: "Restart the monitor service"
      service:
        name: nut-monitor
        state: restarted
      when: upsmon_conf.changed or nut_conf.changed