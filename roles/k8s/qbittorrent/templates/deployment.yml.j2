apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: "{{ k3s_namespace | mandatory }}"
  labels:
    app.kubernetes.io/name: qbittorrent
    app.kubernetes.io/managed-by: ansible
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qbittorrent
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/qbittorrent: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        app.kubernetes.io/name: qbittorrent
        app.kubernetes.io/managed-by: ansible
    spec:
      automountServiceAccountToken: false
      containers:
      - name: qbittorrent
        image: homecentr/qbittorrent:{{ qbittorrent_image_tag }}
        ports:
          - containerPort: 8080
        volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /downloads
            name: downloads
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 8080
          initialDelaySeconds: 45
          timeoutSeconds: 15
          periodSeconds: 30
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          capabilities:
              drop:
              - all
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            memory: 256Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: qbittorrent-config
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads # Shared PVC - Managed by kadalu role