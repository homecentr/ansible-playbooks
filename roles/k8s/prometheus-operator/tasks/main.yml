- include_tasks: ../load-kubeconfig.yml

- include_tasks: ../shared/gfs-storage.yml
  vars:
    gfs_storage_gluster_volume: k3s-services
    gfs_storage_namespace: monitoring
    gfs_storage_service_name: prometheus
    gfs_storage_directory_name: data
    gfs_storage_service_instance_name: prometheus
    gfs_storage_size_gigabytes: 10
    gfs_storage_create_pvc: no

- include_tasks: ../shared/gfs-storage.yml
  vars:
    gfs_storage_gluster_volume: k3s-services
    gfs_storage_namespace: monitoring
    gfs_storage_service_name: prometheus
    gfs_storage_directory_name: grafana
    gfs_storage_service_instance_name: prometheus
    gfs_storage_size_gigabytes: 10
    gfs_storage_create_pvc: yes

- name: Add prometheus-community helm repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
    state: present

- name: Create network policies
  run_once: true
  k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', item) }}"
    apply: yes
    state: present
  with_items:
    - "network-policy-allow-internal.yml.j2"
    - "network-policy-allow-dns.yml.j2"
    - "network-policy-prometheus-allow-kubeapi.yml.j2"
    - "network-policy-prometheus-allow-cadvisor.yml.j2"
    - "network-policy-prometheus-allow-coredns.yml.j2"
    - "network-policy-prometheus-allow-ingress.yml.j2"
    - "network-policy-grafana-allow-kubeapi.yml.j2"
    - "network-policy-grafana-allow-ingress.yml.j2"
    - "network-policy-alertmanager-allow-internet.yml.j2"

- name: Deploy Prometheus Operator
  run_once: true
  kubernetes.core.helm:
    state: present
    release_name: prometheus-operator
    release_namespace: "{{ prometheus_operator_namespace }}"
    create_namespace: no
    chart_version: "{{ prometheus_operator_chart_version }}"
    chart_ref: prometheus-community/kube-prometheus-stack
    kubeconfig_path: "{{ kubeconfig_path }}"
    values:
      namespaceOverride: "{{ prometheus_operator_namespace }}"
      grafana:
        adminPassword: "{{ prometheus_operator_grafana_admin_password }}"
        persistence:
          type: pvc
          enabled: true
          existingClaim: prometheus-grafana
      prometheus:
        prometheusSpec:
          serviceMonitorSelector: {}
          serviceMonitorSelectorNilUsesHelmValues: false
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: gfs.prometheus-data
                volumeName: prometheus-data
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 10Gi
      nodeExporter:
        enabled: false # node-exporter deployed manually to all nodes (not just kube nodes)