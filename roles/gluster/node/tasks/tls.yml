- name: Install required pip modules
  include_role:
    name: geerlingguy.pip
  vars:
    pip_package: python3-pip
    pip_install_packages:
    - name: cryptography

- name: Get certificates default directory
  shell: 
    cmd: "openssl version -d | cut -d'\"' -f2"
  register: gluster_openssl_dir

- name: Generate private key
  register: gluster_private_key
  community.crypto.openssl_privatekey:
    path: "{{ gluster_openssl_dir.stdout }}/glusterfs.key"
    size: "{{ gluster_node_tls_key_size }}"

- name: Create certificate signing request (server)
  community.crypto.openssl_csr:
    path: "{{ gluster_openssl_dir.stdout }}/glusterfs.csr"
    privatekey_path: "{{ gluster_openssl_dir.stdout }}/glusterfs.key"
    common_name: "{{ gluster_hostname }}"
    subject_alt_name: "DNS:{{ gluster_fqdn }}"
  when: "'gluster_servers' in group_names"

- name: Create certificate signing request (client)
  community.crypto.openssl_csr:
    path: "{{ gluster_openssl_dir.stdout }}/glusterfs.csr"
    privatekey_path: "{{ gluster_openssl_dir.stdout }}/glusterfs.key"
    common_name: "{{ ansible_hostname }}"
    subject_alt_name: "DNS:{{ fqdn }}"
  when: "'gluster_servers' not in group_names"

- name: Generate a node certificate
  register: gluster_cert
  community.crypto.x509_certificate:
    path: "{{ gluster_openssl_dir.stdout }}/glusterfs.pem"
    privatekey_path: "{{ gluster_openssl_dir.stdout }}/glusterfs.key"
    csr_path: "{{ gluster_openssl_dir.stdout }}/glusterfs.csr"
    selfsigned_not_after: "+{{ gluster_tls_certificate_validity_days }}d"
    provider: selfsigned
    return_content: yes

- name: Store node certificate in facts
  set_fact:
    gluster_certificate: "{{ gluster_cert.certificate }}"

- name: Generate ca file by concatenating all node certificates
  register: gluster_ca
  copy:
    dest: "{{ gluster_openssl_dir.stdout }}/glusterfs.ca"
    content: "{{ groups['gluster_nodes'] | map('extract', hostvars) | map(attribute='gluster_certificate') | join('') }}"
    owner: root
    group: root
    mode: 0600
    force: yes

- name: Enable Gluster TLS (Create dir)
  file:
    path: /var/lib/glusterd
    state: directory
    owner: root
    group: root
    mode: 0744

- name: Enable Gluster TLS
  register: gluster_secure_access
  file:
    path: /var/lib/glusterd/secure-access
    access_time: preserve # to avoid changing the file when it already exists (causes additional daemon restarts)
    modification_time: preserve
    state: touch 
    owner: root
    group: root
    mode: 0644

- name: Restart server daemon
  include_tasks: restart.yml
  when: "'gluster_servers' in group_names and (gluster_secure_access.changed or gluster_ca.changed or gluster_cert.changed or gluster_private_key.changed)"
  throttle: 1 # to make sure the daemons are restarted one by one