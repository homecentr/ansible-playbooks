- include_tasks: ../load-kubeconfig.yml

- name: Add jetstack helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"
    state: present

- name: Deploy cert-manager
  run_once: true
  kubernetes.core.helm:
    state: present
    release_name: cert-manager
    release_namespace: cert-manager
    create_namespace: yes
    chart_version: "{{ certmanager_chart_version }}"
    chart_ref: jetstack/cert-manager
    kubeconfig_path: "{{ kubeconfig_path }}"
    values:
      installCRDs: true
      webhook:
        podAnnotations:
          container.apparmor.security.beta.kubernetes.io/cert-manager: runtime/default
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            memory: 128Mi
        containerSecurityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 2000
          readOnlyRootFilesystem: true
          capabilities:
              drop:
              - all
      cainjector:
        podAnnotations:
          container.apparmor.security.beta.kubernetes.io/cert-manager: runtime/default
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            memory: 128Mi
        containerSecurityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 2000
          readOnlyRootFilesystem: true
          capabilities:
              drop:
              - all
      podAnnotations:
        container.apparmor.security.beta.kubernetes.io/cert-manager: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          memory: 128Mi
      containerSecurityContext:
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 2000
        readOnlyRootFilesystem: true
        capabilities:
            drop:
            - all

- name: Create resources
  run_once: true
  k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', item) }}"
    state: present
  with_items:
    - "cloudflare-secret.yml.j2"
    - "network-policy-deny-all.yml.j2"
    - "network-policy-allow-dns.yml.j2"
    - "network-policy-allow-http.yml.j2"
    # - "network-policy-allow-metrics.yml.j2" TBA - when prometheus is set up
    - "network-policy-allow-webhook.yml.j2"

- name: Create certificates
  run_once: true
  k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ lookup('template', 'certificate.yml.j2',template_vars=(item | combine({'k3s_namespace': k3s_namespace }))) }}"
    state: present
  with_items: "{{ certmanager_certificates }}"
