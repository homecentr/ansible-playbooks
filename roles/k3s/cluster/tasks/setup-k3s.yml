
- name: "Install pip modules required to manage k8s with ansible"
  include_role:
    name: geerlingguy.pip
  vars:
    pip_package: python3-pip
    pip_install_packages:
    - name: pyyaml
    - name: openshift
    
- name: "Download k3s binary (x64)"
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
    force: no

- name: Create K3s service file
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Create k3s directory if not exist
  file:
    path: /etc/rancher/k3s
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Create config file
  notify: restart k3s
  template:
    src: "config.yaml.j2"
    dest: "/etc/rancher/k3s/config.yaml"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Enable and start the k3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: started
    enabled: yes

- name: Wait for node-token
  wait_for:
    path: "{{ k3s_server_location }}/server/node-token"

- name: Read node-token from master
  slurp:
    path: "{{ k3s_server_location }}/server/node-token"
  register: node_token

- name: Store Master node-token
  set_fact:
    token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link