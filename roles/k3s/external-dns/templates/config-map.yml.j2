apiVersion: v1
kind: ConfigMap
metadata:
  name: external-dns
  namespace: "{{ k3s_namespace | mandatory }}"
data:
  Corefile: |
    .:53 {
        log
        errors
        health {
          lameduck 5s
        }
        ready

        {% for record in external_dns_records %}
        {%- if record.type == "CNAME" %}
        template IN ANY {{ external_dns_cluster_domain }} {
          match ^{{ (record.name + '.' + external_dns_cluster_domain + '.') | replace('.', '[.]') }}$
          answer "{% raw %}{{ .Name }}{% endraw %} {{ record.ttl | default("60") }} IN CNAME {{ record.target }}"
          fallthrough
        }
        {% elif record.type == "A" %}
        template IN A {{ external_dns_cluster_domain }} {
          match ^{{ (record.name + '.' + external_dns_cluster_domain + '.') | replace('.', '[.]') }}$
          {% for target in record.targets %}
          {% if "host" in target %}
          answer "{% raw %}{{ .Name }}{% endraw %} {{ record.ttl | default("60") }} IN A {{ hostvars[target.host].ansible_host }}"
          {% else %}
          answer "{% raw %}{{ .Name }}{% endraw %} {{ record.ttl | default("60") }} IN A {{ target.value }}"
          {% endif %}
          {% endfor %}
          fallthrough
        }
        {% else %}
        {{ "Value '"+ record.type +"' is not a supported dns record type"/0 }}
        {% endif -%}
        {% endfor %}

        hosts {
        {% filter indent(width=4) %}
        {% for host in external_dns_known_hosts %}
        {{ hostvars[host.name]['ansible_host'] }} {{ hostvars[host.name][host.hostname_variable | default("fqdn")] }}
        {% endfor %}

        {% endfilter %}

          fallthrough
        }

        k8s_gateway {{ external_dns_cluster_domain }} {}
      
        forward . {{ external_dns_forwarders | join(" ") }} {
          max_concurrent 1000
        }
        prometheus :9153
        cache 30
        loop
        reload
        loadbalance
    }
